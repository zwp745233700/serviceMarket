<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.serviceMarket.mapper.GroupMapper" >
  <resultMap id="BaseResultMap" type="com.serviceMarket.pojo.Group" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="original_price" property="originalPrice" jdbcType="INTEGER" />
    <result column="group_price" property="groupPrice" jdbcType="INTEGER" />
    <result column="limit_num" property="limitNum" jdbcType="INTEGER" />
    <result column="surplus" property="surplus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_id, number, start_time, end_time, original_price, group_price, limit_num, 
    surplus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.serviceMarket.pojo.GroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.serviceMarket.pojo.GroupExample" >
    delete from group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.serviceMarket.pojo.Group" >
    insert into group (id, shop_id, number, 
      start_time, end_time, original_price, 
      group_price, limit_num, surplus
      )
    values (#{id,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{originalPrice,jdbcType=INTEGER}, 
      #{groupPrice,jdbcType=INTEGER}, #{limitNum,jdbcType=INTEGER}, #{surplus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.serviceMarket.pojo.Group" >
    insert into group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="originalPrice != null" >
        original_price,
      </if>
      <if test="groupPrice != null" >
        group_price,
      </if>
      <if test="limitNum != null" >
        limit_num,
      </if>
      <if test="surplus != null" >
        surplus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="originalPrice != null" >
        #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null" >
        #{groupPrice,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null" >
        #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="surplus != null" >
        #{surplus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.serviceMarket.pojo.GroupExample" resultType="java.lang.Integer" >
    select count(*) from group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update group
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.originalPrice != null" >
        original_price = #{record.originalPrice,jdbcType=INTEGER},
      </if>
      <if test="record.groupPrice != null" >
        group_price = #{record.groupPrice,jdbcType=INTEGER},
      </if>
      <if test="record.limitNum != null" >
        limit_num = #{record.limitNum,jdbcType=INTEGER},
      </if>
      <if test="record.surplus != null" >
        surplus = #{record.surplus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update group
    set id = #{record.id,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      original_price = #{record.originalPrice,jdbcType=INTEGER},
      group_price = #{record.groupPrice,jdbcType=INTEGER},
      limit_num = #{record.limitNum,jdbcType=INTEGER},
      surplus = #{record.surplus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.serviceMarket.pojo.Group" >
    update group
    <set >
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="originalPrice != null" >
        original_price = #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null" >
        group_price = #{groupPrice,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null" >
        limit_num = #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="surplus != null" >
        surplus = #{surplus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.serviceMarket.pojo.Group" >
    update group
    set shop_id = #{shopId,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      original_price = #{originalPrice,jdbcType=INTEGER},
      group_price = #{groupPrice,jdbcType=INTEGER},
      limit_num = #{limitNum,jdbcType=INTEGER},
      surplus = #{surplus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>